// Generated by IcedCoffeeScript 1.6.3-f
var PostHighlighter, iced, __iced_k, __iced_k_noop,
  __slice = [].slice;

iced = {
  Deferrals: (function() {
    function _Class(_arg) {
      this.continuation = _arg;
      this.count = 1;
      this.ret = null;
    }

    _Class.prototype._fulfill = function() {
      if (!--this.count) {
        return this.continuation(this.ret);
      }
    };

    _Class.prototype.defer = function(defer_params) {
      var _this = this;
      ++this.count;
      return function() {
        var inner_params, _ref;
        inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        if (defer_params != null) {
          if ((_ref = defer_params.assign_fn) != null) {
            _ref.apply(null, inner_params);
          }
        }
        return _this._fulfill();
      };
    };

    return _Class;

  })(),
  findDeferral: function() {
    return null;
  },
  trampoline: function(_fn) {
    return _fn();
  }
};
__iced_k = __iced_k_noop = function() {};

PostHighlighter = (function() {
  var highlight_btn, highlight_mode_select, post_ends_with;

  function PostHighlighter() {}

  Object.defineProperty(PostHighlighter.prototype, "mode", {
    get: function() {
      return highlight_mode_select.options[highlight_mode_select.selectedIndex].value;
    }
  });

  PostHighlighter.prototype.on_highlight_mode_changed = function() {
    if (PostHighlighter.prototype.mode === 'ends') {
      console.log(post_ends_with);
      return post_ends_with.setAttribute('style', 'width: 150px');
    } else {
      return post_ends_with.setAttribute('style', 'width: 150px; display: none');
    }
  };

  PostHighlighter.prototype.highlight = function() {
    switch (PostHighlighter.prototype.mode) {
      case "dubs":
        return PostHighlighter.prototype.highlight_dubs();
      case "trips":
        return PostHighlighter.prototype.highlight_trips();
      case "ends":
        return PostHighlighter.prototype.highlight_ends(post_ends_with.value);
    }
  };

  PostHighlighter.prototype.highlight_ends = function(ending) {
    var matcher;
    matcher = "(" + ending + ")$";
    return PostHighlighter.prototype.highlight_posts(matcher);
  };

  PostHighlighter.prototype.highlight_dubs = function() {
    var matcher;
    matcher = "(00|11|22|33|44|55|66|77|88|99)$";
    return PostHighlighter.prototype.highlight_posts(matcher);
  };

  PostHighlighter.prototype.highlight_trips = function() {
    var matcher;
    matcher = "(000|111|222|333|444|555|666|777|888|999)$";
    return PostHighlighter.prototype.highlight_posts(matcher);
  };

  PostHighlighter.prototype.highlight_posts = function(matcher) {
    var tabs, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "4chan-post-highlight-extension\\popup.iced",
        funcname: "PostHighlighter.highlight_posts"
      });
      chrome.tabs.query({
        active: true,
        currentWindow: true
      }, __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            return tabs = arguments[0];
          };
        })(),
        lineno: 30
      }));
      __iced_deferrals._fulfill();
    })(function() {
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "4chan-post-highlight-extension\\popup.iced",
          funcname: "PostHighlighter.highlight_posts"
        });
        chrome.tabs.sendMessage(tabs[0].id, {
          action: 'highlight_posts',
          matcher: matcher
        }, __iced_deferrals.defer({
          lineno: 31
        }));
        __iced_deferrals._fulfill();
      })(function() {
        return window.close();
      });
    });
  };

  highlight_mode_select = document.getElementById('highlight_mode_select');

  highlight_mode_select.addEventListener('change', PostHighlighter.prototype.on_highlight_mode_changed);

  post_ends_with = document.getElementById('post_ends_with');

  post_ends_with.setAttribute('style', 'width: 150px; display: none');

  highlight_btn = document.getElementById('highlight_btn');

  highlight_btn.addEventListener('click', PostHighlighter.prototype.highlight);

  return PostHighlighter;

})();
